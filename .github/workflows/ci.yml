name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.x'
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint & Format (Ubuntu, Node ${{ env.NODE_VERSION }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci --no-audit --no-fund
      - run: npm run lint
      - run: npm run format:check

  build_test:
    name: Build & Test (Ubuntu, Node ${{ env.NODE_VERSION }})
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - run: npm ci --no-audit --no-fund
      - run: npm run build
      - name: Run comprehensive tests (pretty logs)
        run: node tests/run-all.js
      - name: Upload coverage lcov
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: coverage-lcov
          path: ./coverage/lcov.info

  release:
    name: Release (semantic-release)
    runs-on: ubuntu-latest
    needs: [lint, build_test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && secrets.NPM_TOKEN != ''
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci --no-audit --no-fund
      - run: npm run build
      - name: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release